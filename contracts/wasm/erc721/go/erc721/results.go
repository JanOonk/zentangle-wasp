// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package erc721

import "github.com/iotaledger/wasp/packages/vm/wasmlib/go/wasmlib"

type ImmutableBalanceOfResults struct {
	id int32
}

func (s ImmutableBalanceOfResults) Amount() wasmlib.ScImmutableUint64 {
	return wasmlib.NewScImmutableUint64(s.id, idxMap[IdxResultAmount])
}

type MutableBalanceOfResults struct {
	id int32
}

func (s MutableBalanceOfResults) Amount() wasmlib.ScMutableUint64 {
	return wasmlib.NewScMutableUint64(s.id, idxMap[IdxResultAmount])
}

type ImmutableGetApprovedResults struct {
	id int32
}

func (s ImmutableGetApprovedResults) Approved() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxResultApproved])
}

type MutableGetApprovedResults struct {
	id int32
}

func (s MutableGetApprovedResults) Approved() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxResultApproved])
}

type ImmutableIsApprovedForAllResults struct {
	id int32
}

func (s ImmutableIsApprovedForAllResults) Approval() wasmlib.ScImmutableBool {
	return wasmlib.NewScImmutableBool(s.id, idxMap[IdxResultApproval])
}

type MutableIsApprovedForAllResults struct {
	id int32
}

func (s MutableIsApprovedForAllResults) Approval() wasmlib.ScMutableBool {
	return wasmlib.NewScMutableBool(s.id, idxMap[IdxResultApproval])
}

type ImmutableNameResults struct {
	id int32
}

func (s ImmutableNameResults) Name() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, idxMap[IdxResultName])
}

type MutableNameResults struct {
	id int32
}

func (s MutableNameResults) Name() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, idxMap[IdxResultName])
}

type ImmutableOwnerOfResults struct {
	id int32
}

func (s ImmutableOwnerOfResults) Owner() wasmlib.ScImmutableAgentID {
	return wasmlib.NewScImmutableAgentID(s.id, idxMap[IdxResultOwner])
}

type MutableOwnerOfResults struct {
	id int32
}

func (s MutableOwnerOfResults) Owner() wasmlib.ScMutableAgentID {
	return wasmlib.NewScMutableAgentID(s.id, idxMap[IdxResultOwner])
}

type ImmutableSymbolResults struct {
	id int32
}

func (s ImmutableSymbolResults) Symbol() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, idxMap[IdxResultSymbol])
}

type MutableSymbolResults struct {
	id int32
}

func (s MutableSymbolResults) Symbol() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, idxMap[IdxResultSymbol])
}

type ImmutableTokenURIResults struct {
	id int32
}

func (s ImmutableTokenURIResults) TokenURI() wasmlib.ScImmutableString {
	return wasmlib.NewScImmutableString(s.id, idxMap[IdxResultTokenURI])
}

type MutableTokenURIResults struct {
	id int32
}

func (s MutableTokenURIResults) TokenURI() wasmlib.ScMutableString {
	return wasmlib.NewScMutableString(s.id, idxMap[IdxResultTokenURI])
}
