// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

import * as wasmlib from "wasmlib";

export class Erc721Events {

	approval(approved: wasmlib.ScAgentID, owner: wasmlib.ScAgentID, tokenID: wasmlib.ScHash): void {
		new wasmlib.EventEncoder("erc721.approval").
		agentID(approved).
		agentID(owner).
		hash(tokenID).
		emit();
	}

	approvalForAll(approval: bool, operator: wasmlib.ScAgentID, owner: wasmlib.ScAgentID): void {
		new wasmlib.EventEncoder("erc721.approvalForAll").
		bool(approval).
		agentID(operator).
		agentID(owner).
		emit();
	}

	init(name: string, symbol: string): void {
		new wasmlib.EventEncoder("erc721.init").
		string(name).
		string(symbol).
		emit();
	}

	mint(balance: u64, owner: wasmlib.ScAgentID, tokenID: wasmlib.ScHash): void {
		new wasmlib.EventEncoder("erc721.mint").
		uint64(balance).
		agentID(owner).
		hash(tokenID).
		emit();
	}

	transfer(from: wasmlib.ScAgentID, to: wasmlib.ScAgentID, tokenID: wasmlib.ScHash): void {
		new wasmlib.EventEncoder("erc721.transfer").
		agentID(from).
		agentID(to).
		hash(tokenID).
		emit();
	}
}
