// Copyright 2020 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

// (Re-)generated by schema tool
// >>>> DO NOT CHANGE THIS FILE! <<<<
// Change the json schema instead

package coreblocklog

import "github.com/iotaledger/wasp/packages/vm/wasmlib/go/wasmlib"

type ImmutableGetBlockInfoParams struct {
	id int32
}

func (s ImmutableGetBlockInfoParams) BlockIndex() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, wasmlib.KeyID(ParamBlockIndex))
}

type MutableGetBlockInfoParams struct {
	id int32
}

func (s MutableGetBlockInfoParams) BlockIndex() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, wasmlib.KeyID(ParamBlockIndex))
}

type ImmutableGetEventsForBlockParams struct {
	id int32
}

func (s ImmutableGetEventsForBlockParams) BlockIndex() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, wasmlib.KeyID(ParamBlockIndex))
}

type MutableGetEventsForBlockParams struct {
	id int32
}

func (s MutableGetEventsForBlockParams) BlockIndex() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, wasmlib.KeyID(ParamBlockIndex))
}

type ImmutableGetEventsForContractParams struct {
	id int32
}

func (s ImmutableGetEventsForContractParams) ContractHname() wasmlib.ScImmutableHname {
	return wasmlib.NewScImmutableHname(s.id, wasmlib.KeyID(ParamContractHname))
}

func (s ImmutableGetEventsForContractParams) FromBlock() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, wasmlib.KeyID(ParamFromBlock))
}

func (s ImmutableGetEventsForContractParams) ToBlock() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, wasmlib.KeyID(ParamToBlock))
}

type MutableGetEventsForContractParams struct {
	id int32
}

func (s MutableGetEventsForContractParams) ContractHname() wasmlib.ScMutableHname {
	return wasmlib.NewScMutableHname(s.id, wasmlib.KeyID(ParamContractHname))
}

func (s MutableGetEventsForContractParams) FromBlock() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, wasmlib.KeyID(ParamFromBlock))
}

func (s MutableGetEventsForContractParams) ToBlock() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, wasmlib.KeyID(ParamToBlock))
}

type ImmutableGetEventsForRequestParams struct {
	id int32
}

func (s ImmutableGetEventsForRequestParams) RequestID() wasmlib.ScImmutableRequestID {
	return wasmlib.NewScImmutableRequestID(s.id, wasmlib.KeyID(ParamRequestID))
}

type MutableGetEventsForRequestParams struct {
	id int32
}

func (s MutableGetEventsForRequestParams) RequestID() wasmlib.ScMutableRequestID {
	return wasmlib.NewScMutableRequestID(s.id, wasmlib.KeyID(ParamRequestID))
}

type ImmutableGetRequestIDsForBlockParams struct {
	id int32
}

func (s ImmutableGetRequestIDsForBlockParams) BlockIndex() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, wasmlib.KeyID(ParamBlockIndex))
}

type MutableGetRequestIDsForBlockParams struct {
	id int32
}

func (s MutableGetRequestIDsForBlockParams) BlockIndex() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, wasmlib.KeyID(ParamBlockIndex))
}

type ImmutableGetRequestReceiptParams struct {
	id int32
}

func (s ImmutableGetRequestReceiptParams) RequestID() wasmlib.ScImmutableRequestID {
	return wasmlib.NewScImmutableRequestID(s.id, wasmlib.KeyID(ParamRequestID))
}

type MutableGetRequestReceiptParams struct {
	id int32
}

func (s MutableGetRequestReceiptParams) RequestID() wasmlib.ScMutableRequestID {
	return wasmlib.NewScMutableRequestID(s.id, wasmlib.KeyID(ParamRequestID))
}

type ImmutableGetRequestReceiptsForBlockParams struct {
	id int32
}

func (s ImmutableGetRequestReceiptsForBlockParams) BlockIndex() wasmlib.ScImmutableInt32 {
	return wasmlib.NewScImmutableInt32(s.id, wasmlib.KeyID(ParamBlockIndex))
}

type MutableGetRequestReceiptsForBlockParams struct {
	id int32
}

func (s MutableGetRequestReceiptsForBlockParams) BlockIndex() wasmlib.ScMutableInt32 {
	return wasmlib.NewScMutableInt32(s.id, wasmlib.KeyID(ParamBlockIndex))
}

type ImmutableIsRequestProcessedParams struct {
	id int32
}

func (s ImmutableIsRequestProcessedParams) RequestID() wasmlib.ScImmutableRequestID {
	return wasmlib.NewScImmutableRequestID(s.id, wasmlib.KeyID(ParamRequestID))
}

type MutableIsRequestProcessedParams struct {
	id int32
}

func (s MutableIsRequestProcessedParams) RequestID() wasmlib.ScMutableRequestID {
	return wasmlib.NewScMutableRequestID(s.id, wasmlib.KeyID(ParamRequestID))
}
